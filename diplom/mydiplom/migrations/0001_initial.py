# Generated by Django 2.2 on 2020-02-10 09:39

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='images', verbose_name='Фотография')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('patronymic_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('gender', models.CharField(choices=[('m', 'Man'), ('f', 'Female'), ('u', 'Unknown')], default='Unknown', max_length=7)),
                ('email', models.EmailField(help_text='Введите e-mail в формате "myname@mymail.com"', max_length=40)),
                ('form_of_address', models.CharField(blank=True, max_length=20, null=True)),
                ('birthday', models.DateField(default=datetime.datetime(1990, 2, 9, 23, 39, 12, 633844), verbose_name='Дата рождения')),
                ('country', models.CharField(max_length=100, verbose_name='Страна')),
                ('region', models.CharField(blank=True, max_length=100, null=True, verbose_name='Область / регион')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Город (населённый пункт)')),
                ('postal_code', models.CharField(blank=True, max_length=15, null=True, verbose_name='Почтовый индекс')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Адрес')),
                ('phone_number1', models.CharField(blank=True, max_length=20, null=True, verbose_name='Основной номер телефона')),
                ('phone_number2', models.CharField(blank=True, help_text="Введите номер в международном формате '+380xxxxxxxxx'", max_length=20, null=True, verbose_name='Дополнительный номер телефона')),
                ('scype', models.CharField(blank=True, max_length=30, null=True, verbose_name='Scype')),
                ('telegram', models.CharField(blank=True, max_length=30, null=True, verbose_name='Telegram')),
                ('viber', models.CharField(blank=True, max_length=30, null=True, verbose_name='Viber')),
                ('whatsapp', models.CharField(blank=True, max_length=3, null=True, verbose_name='WhatsApp')),
                ('user_site', models.URLField(blank=True, null=True, verbose_name='Введите ссылку на свой сайт')),
                ('additional', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Дополнительные сведения')),
                ('user_file', models.FileField(blank=True, null=True, upload_to='files', verbose_name='Загрузить файл')),
                ('user_IP', models.GenericIPAddressField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['id', 'last_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(choices=[('none', 'Не определена'), ('civil', 'Гражданские дела'), ('criminal', 'Уголовные дела'), ('business', 'Бизнес')], default='Не определена', max_length=250, verbose_name='Тема')),
                ('priority', models.CharField(choices=[('l', 'Low'), ('m', 'Medium'), ('h', 'High')], default='Low', max_length=10)),
                ('application_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время подачи заявки')),
                ('application_update', models.DateTimeField(auto_now=True, verbose_name='Дата и время обновления заявки')),
                ('status', models.CharField(choices=[('inprogress', 'В обработке'), ('approved', 'Принятая'), ('rejected', 'Отклонённая'), ('finallyrejected', 'Окончательно отклонённая')], default='В обработке', max_length=25)),
                ('first_rejected', models.BooleanField(default=False, verbose_name='Отклонена')),
                ('finally_rejected', models.BooleanField(default=False, verbose_name='Окончательно отклонена')),
                ('restored', models.BooleanField(default=False, verbose_name='Восстановлена')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'ordering': ['-application_date', 'client'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Ваш комментарий')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('to_claim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mydiplom.Claim', verbose_name='Обрабатываемая заявка')),
            ],
            options={
                'ordering': ['-date_updated', 'to_claim'],
            },
        ),
    ]
